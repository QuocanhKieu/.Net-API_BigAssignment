// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using T2305M_API.Entities;

#nullable disable

namespace T2305M_API.Migrations
{
    [DbContext(typeof(T2305mApiContext))]
    partial class T2305mApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("T2305M_API.Entities.Artifact", b =>
                {
                    b.Property<int>("ArtifactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtifactId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscoveredDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtifactId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Artifact");
                });

            modelBuilder.Entity("T2305M_API.Entities.ArtifactArticle", b =>
                {
                    b.Property<int>("ArtifactArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtifactArticleId"));

                    b.Property<int>("ArtifactId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtifactArticleId");

                    b.HasIndex("ArtifactId");

                    b.HasIndex("CreatorId");

                    b.ToTable("ArtifactArticle");
                });

            modelBuilder.Entity("T2305M_API.Entities.ArtifactArticleImage", b =>
                {
                    b.Property<int>("ArtifactArticleImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtifactArticleImageId"));

                    b.Property<int?>("ArtifactArticleId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtifactArticleImageId");

                    b.HasIndex("ArtifactArticleId");

                    b.ToTable("ArtifactArticleImage");
                });

            modelBuilder.Entity("T2305M_API.Entities.ArtifactImage", b =>
                {
                    b.Property<int>("ArtifactImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtifactImageId"));

                    b.Property<int?>("ArtifactId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ArtifactImageId");

                    b.HasIndex("ArtifactId");

                    b.ToTable("ArtifactImage");
                });

            modelBuilder.Entity("T2305M_API.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("T2305M_API.Entities.Creator", b =>
                {
                    b.Property<int>("CreatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreatorId"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CreatorId");

                    b.ToTable("Creator");
                });

            modelBuilder.Entity("T2305M_API.Entities.Culture", b =>
                {
                    b.Property<int>("CultureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CultureId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CultureId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Culture");
                });

            modelBuilder.Entity("T2305M_API.Entities.CultureArticle", b =>
                {
                    b.Property<int>("CultureArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CultureArticleId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("CultureId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CultureArticleId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("CultureId");

                    b.ToTable("CultureArticle");
                });

            modelBuilder.Entity("T2305M_API.Entities.CultureArticleImage", b =>
                {
                    b.Property<int>("CultureArticleImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CultureArticleImageId"));

                    b.Property<int?>("CultureArticleId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CultureArticleImageId");

                    b.HasIndex("CultureArticleId");

                    b.ToTable("CultureArticleImage");
                });

            modelBuilder.Entity("T2305M_API.Entities.CultureImage", b =>
                {
                    b.Property<int>("CultureImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CultureImageId"));

                    b.Property<int?>("CultureId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CultureImageId");

                    b.HasIndex("CultureId");

                    b.ToTable("CultureImage");
                });

            modelBuilder.Entity("T2305M_API.Entities.Exhibition", b =>
                {
                    b.Property<int>("ExhibitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExhibitionId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organizer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExhibitionId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Exhibition");
                });

            modelBuilder.Entity("T2305M_API.Entities.ExhibitionArticle", b =>
                {
                    b.Property<int>("ExhibitionArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExhibitionArticleId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExhibitionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExhibitionArticleId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ExhibitionId");

                    b.ToTable("ExhibitionArticle");
                });

            modelBuilder.Entity("T2305M_API.Entities.ExhibitionArticleImage", b =>
                {
                    b.Property<int>("ExhibitionArticleImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExhibitionArticleImageId"));

                    b.Property<int>("ExhibitionArticleId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExhibitionArticleImageId");

                    b.HasIndex("ExhibitionArticleId");

                    b.ToTable("ExhibitionArticleImage");
                });

            modelBuilder.Entity("T2305M_API.Entities.ExhibitionImage", b =>
                {
                    b.Property<int>("ExhibitionImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExhibitionImageId"));

                    b.Property<int>("ExhibitionId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExhibitionImageId");

                    b.HasIndex("ExhibitionId");

                    b.ToTable("ExhibitionImage");
                });

            modelBuilder.Entity("T2305M_API.Entities.NationalEvent", b =>
                {
                    b.Property<int>("NationalEventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalEventID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NationalEventID");

                    b.HasIndex("CreatorId");

                    b.ToTable("NationalEvent");
                });

            modelBuilder.Entity("T2305M_API.Entities.NationalEventArticle", b =>
                {
                    b.Property<int>("NationalEventArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalEventArticleId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("NationalEventID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NationalEventArticleId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("NationalEventID");

                    b.ToTable("NationalEventArticle");
                });

            modelBuilder.Entity("T2305M_API.Entities.NationalEventArticleImage", b =>
                {
                    b.Property<int>("NationalEventArticleImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalEventArticleImageId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NationalEventArticleId")
                        .HasColumnType("int");

                    b.HasKey("NationalEventArticleImageId");

                    b.HasIndex("NationalEventArticleId");

                    b.ToTable("NationalEventArticleImage");
                });

            modelBuilder.Entity("T2305M_API.Entities.NationalEventImage", b =>
                {
                    b.Property<int>("NationalEventImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalEventImageId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationalEventID")
                        .HasColumnType("int");

                    b.HasKey("NationalEventImageId");

                    b.HasIndex("NationalEventID");

                    b.ToTable("NationalEventImage");
                });

            modelBuilder.Entity("T2305M_API.Entities.Artifact", b =>
                {
                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("Artifacts")
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("T2305M_API.Entities.ArtifactArticle", b =>
                {
                    b.HasOne("T2305M_API.Entities.Artifact", "Artifact")
                        .WithMany("ArtifactArticles")
                        .HasForeignKey("ArtifactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("ArtifactArticle")
                        .HasForeignKey("CreatorId");

                    b.Navigation("Artifact");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("T2305M_API.Entities.ArtifactArticleImage", b =>
                {
                    b.HasOne("T2305M_API.Entities.ArtifactArticle", "ArtifactArticle")
                        .WithMany("ArtifactArticleImages")
                        .HasForeignKey("ArtifactArticleId");

                    b.Navigation("ArtifactArticle");
                });

            modelBuilder.Entity("T2305M_API.Entities.ArtifactImage", b =>
                {
                    b.HasOne("T2305M_API.Entities.Artifact", "Artifact")
                        .WithMany("ArtifactImages")
                        .HasForeignKey("ArtifactId");

                    b.Navigation("Artifact");
                });

            modelBuilder.Entity("T2305M_API.Entities.Culture", b =>
                {
                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("Cultures")
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("T2305M_API.Entities.CultureArticle", b =>
                {
                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("CultureArticle")
                        .HasForeignKey("CreatorId");

                    b.HasOne("T2305M_API.Entities.Culture", "Culture")
                        .WithMany("CultureArticles")
                        .HasForeignKey("CultureId");

                    b.Navigation("Creator");

                    b.Navigation("Culture");
                });

            modelBuilder.Entity("T2305M_API.Entities.CultureArticleImage", b =>
                {
                    b.HasOne("T2305M_API.Entities.CultureArticle", "CultureArticle")
                        .WithMany("CultureArticleImages")
                        .HasForeignKey("CultureArticleId");

                    b.Navigation("CultureArticle");
                });

            modelBuilder.Entity("T2305M_API.Entities.CultureImage", b =>
                {
                    b.HasOne("T2305M_API.Entities.Culture", "Culture")
                        .WithMany("CultureImages")
                        .HasForeignKey("CultureId");

                    b.Navigation("Culture");
                });

            modelBuilder.Entity("T2305M_API.Entities.Exhibition", b =>
                {
                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("Exhibitions")
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("T2305M_API.Entities.ExhibitionArticle", b =>
                {
                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("ExhibitionArticle")
                        .HasForeignKey("CreatorId");

                    b.HasOne("T2305M_API.Entities.Exhibition", "Exhibition")
                        .WithMany("ExhibitionArticles")
                        .HasForeignKey("ExhibitionId");

                    b.Navigation("Creator");

                    b.Navigation("Exhibition");
                });

            modelBuilder.Entity("T2305M_API.Entities.ExhibitionArticleImage", b =>
                {
                    b.HasOne("T2305M_API.Entities.ExhibitionArticle", "ExhibitionArticle")
                        .WithMany("ExhibitionArticleImages")
                        .HasForeignKey("ExhibitionArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExhibitionArticle");
                });

            modelBuilder.Entity("T2305M_API.Entities.ExhibitionImage", b =>
                {
                    b.HasOne("T2305M_API.Entities.Exhibition", "Exhibition")
                        .WithMany("ExhibitionImages")
                        .HasForeignKey("ExhibitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exhibition");
                });

            modelBuilder.Entity("T2305M_API.Entities.NationalEvent", b =>
                {
                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("NationalEvents")
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("T2305M_API.Entities.NationalEventArticle", b =>
                {
                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("NationalEventArticle")
                        .HasForeignKey("CreatorId");

                    b.HasOne("T2305M_API.Entities.NationalEvent", "NationalEvent")
                        .WithMany("NationalEventArticles")
                        .HasForeignKey("NationalEventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("NationalEvent");
                });

            modelBuilder.Entity("T2305M_API.Entities.NationalEventArticleImage", b =>
                {
                    b.HasOne("T2305M_API.Entities.NationalEventArticle", "NationalEventArticle")
                        .WithMany("NationalEventArticleImages")
                        .HasForeignKey("NationalEventArticleId");

                    b.Navigation("NationalEventArticle");
                });

            modelBuilder.Entity("T2305M_API.Entities.NationalEventImage", b =>
                {
                    b.HasOne("T2305M_API.Entities.NationalEvent", "NationalEvent")
                        .WithMany("NationalEventImages")
                        .HasForeignKey("NationalEventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NationalEvent");
                });

            modelBuilder.Entity("T2305M_API.Entities.Artifact", b =>
                {
                    b.Navigation("ArtifactArticles");

                    b.Navigation("ArtifactImages");
                });

            modelBuilder.Entity("T2305M_API.Entities.ArtifactArticle", b =>
                {
                    b.Navigation("ArtifactArticleImages");
                });

            modelBuilder.Entity("T2305M_API.Entities.Creator", b =>
                {
                    b.Navigation("ArtifactArticle");

                    b.Navigation("Artifacts");

                    b.Navigation("CultureArticle");

                    b.Navigation("Cultures");

                    b.Navigation("ExhibitionArticle");

                    b.Navigation("Exhibitions");

                    b.Navigation("NationalEventArticle");

                    b.Navigation("NationalEvents");
                });

            modelBuilder.Entity("T2305M_API.Entities.Culture", b =>
                {
                    b.Navigation("CultureArticles");

                    b.Navigation("CultureImages");
                });

            modelBuilder.Entity("T2305M_API.Entities.CultureArticle", b =>
                {
                    b.Navigation("CultureArticleImages");
                });

            modelBuilder.Entity("T2305M_API.Entities.Exhibition", b =>
                {
                    b.Navigation("ExhibitionArticles");

                    b.Navigation("ExhibitionImages");
                });

            modelBuilder.Entity("T2305M_API.Entities.ExhibitionArticle", b =>
                {
                    b.Navigation("ExhibitionArticleImages");
                });

            modelBuilder.Entity("T2305M_API.Entities.NationalEvent", b =>
                {
                    b.Navigation("NationalEventArticles");

                    b.Navigation("NationalEventImages");
                });

            modelBuilder.Entity("T2305M_API.Entities.NationalEventArticle", b =>
                {
                    b.Navigation("NationalEventArticleImages");
                });
#pragma warning restore 612, 618
        }
    }
}
