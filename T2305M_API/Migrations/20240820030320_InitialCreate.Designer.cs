// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using T2305M_API.Entities;

#nullable disable

namespace T2305M_API.Migrations
{
    [DbContext(typeof(T2305mApiContext))]
    [Migration("20240820030320_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("T2305M_API.Entities.Art", b =>
                {
                    b.Property<int>("ArtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtId"));

                    b.Property<string>("Artist")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Period")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ArtId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Art");
                });

            modelBuilder.Entity("T2305M_API.Entities.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("RelatedEntityId")
                        .HasColumnType("int");

                    b.Property<string>("RelatedEntityType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ArticleId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("RelatedEntityId");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("T2305M_API.Entities.ArticleImage", b =>
                {
                    b.Property<int>("ArticleImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleImageId"));

                    b.Property<int?>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArticleImageId");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleImage");
                });

            modelBuilder.Entity("T2305M_API.Entities.Artifact", b =>
                {
                    b.Property<int>("ArtifactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtifactId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DiscoveredDate")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ArtifactId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Artifact");
                });

            modelBuilder.Entity("T2305M_API.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continent")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PublishedDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Publisher")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("BookId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("T2305M_API.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("T2305M_API.Entities.Creator", b =>
                {
                    b.Property<int>("CreatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreatorId"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CreatorId");

                    b.ToTable("Creator");
                });

            modelBuilder.Entity("T2305M_API.Entities.Culture", b =>
                {
                    b.Property<int>("CultureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CultureId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CultureId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Culture");
                });

            modelBuilder.Entity("T2305M_API.Entities.EntityImage", b =>
                {
                    b.Property<int>("EntityImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityImageId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RelatedEntityId")
                        .HasColumnType("int");

                    b.Property<string>("RelatedEntityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("EntityImageId");

                    b.HasIndex("RelatedEntityId");

                    b.ToTable("EntityImage");
                });

            modelBuilder.Entity("T2305M_API.Entities.Exhibition", b =>
                {
                    b.Property<int>("ExhibitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExhibitionId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Continent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Organizer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ExhibitionId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Exhibition");
                });

            modelBuilder.Entity("T2305M_API.Entities.NationalEvent", b =>
                {
                    b.Property<int>("NationalEventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalEventID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThumbnailImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("NationalEventID");

                    b.HasIndex("CreatorId");

                    b.ToTable("NationalEvent");
                });

            modelBuilder.Entity("T2305M_API.Entities.Art", b =>
                {
                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("Arts")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("T2305M_API.Entities.Article", b =>
                {
                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("Articles")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("T2305M_API.Entities.Art", "Art")
                        .WithMany("ArtArticles")
                        .HasForeignKey("RelatedEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Article_Art_RelatedEntityId");

                    b.HasOne("T2305M_API.Entities.Artifact", "Artifact")
                        .WithMany("ArtifactArticles")
                        .HasForeignKey("RelatedEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Article_Artifact_RelatedEntityId");

                    b.HasOne("T2305M_API.Entities.Book", "Book")
                        .WithMany("BookArticles")
                        .HasForeignKey("RelatedEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Article_Book_RelatedEntityId");

                    b.HasOne("T2305M_API.Entities.Culture", "Culture")
                        .WithMany("CultureArticles")
                        .HasForeignKey("RelatedEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Article_Culture_RelatedEntityId");

                    b.HasOne("T2305M_API.Entities.Exhibition", "Exhibition")
                        .WithMany("ExhibitionArticles")
                        .HasForeignKey("RelatedEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Article_Exhibition_RelatedEntityId");

                    b.HasOne("T2305M_API.Entities.NationalEvent", "NationalEvent")
                        .WithMany("NationalEventArticles")
                        .HasForeignKey("RelatedEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Article_NationalEvent_RelatedEntityId");

                    b.Navigation("Art");

                    b.Navigation("Artifact");

                    b.Navigation("Book");

                    b.Navigation("Creator");

                    b.Navigation("Culture");

                    b.Navigation("Exhibition");

                    b.Navigation("NationalEvent");
                });

            modelBuilder.Entity("T2305M_API.Entities.ArticleImage", b =>
                {
                    b.HasOne("T2305M_API.Entities.Article", "Article")
                        .WithMany("ArticleImages")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Article");
                });

            modelBuilder.Entity("T2305M_API.Entities.Artifact", b =>
                {
                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("Artifacts")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("T2305M_API.Entities.Book", b =>
                {
                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("Books")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("T2305M_API.Entities.Culture", b =>
                {
                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("Cultures")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("T2305M_API.Entities.EntityImage", b =>
                {
                    b.HasOne("T2305M_API.Entities.Art", "Art")
                        .WithMany("ArtImages")
                        .HasForeignKey("RelatedEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_EntityImage_Art_RelatedEntityId");

                    b.HasOne("T2305M_API.Entities.Artifact", "Artifact")
                        .WithMany("ArtifactImages")
                        .HasForeignKey("RelatedEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_EntityImage_Artifact_RelatedEntityId");

                    b.HasOne("T2305M_API.Entities.Book", "Book")
                        .WithMany("BookImages")
                        .HasForeignKey("RelatedEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_EntityImage_Book_RelatedEntityId");

                    b.HasOne("T2305M_API.Entities.Culture", "Culture")
                        .WithMany("CultureImages")
                        .HasForeignKey("RelatedEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_EntityImage_Culture_RelatedEntityId");

                    b.HasOne("T2305M_API.Entities.Exhibition", "Exhibition")
                        .WithMany("ExhibitionImages")
                        .HasForeignKey("RelatedEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_EntityImage_Exhibition_RelatedEntityId");

                    b.HasOne("T2305M_API.Entities.NationalEvent", "NationalEvent")
                        .WithMany("NationalEventImages")
                        .HasForeignKey("RelatedEntityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_EntityImage_NationalEvent_RelatedEntityId");

                    b.Navigation("Art");

                    b.Navigation("Artifact");

                    b.Navigation("Book");

                    b.Navigation("Culture");

                    b.Navigation("Exhibition");

                    b.Navigation("NationalEvent");
                });

            modelBuilder.Entity("T2305M_API.Entities.Exhibition", b =>
                {
                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("Exhibitions")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("T2305M_API.Entities.NationalEvent", b =>
                {
                    b.HasOne("T2305M_API.Entities.Creator", "Creator")
                        .WithMany("NationalEvents")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("T2305M_API.Entities.Art", b =>
                {
                    b.Navigation("ArtArticles");

                    b.Navigation("ArtImages");
                });

            modelBuilder.Entity("T2305M_API.Entities.Article", b =>
                {
                    b.Navigation("ArticleImages");
                });

            modelBuilder.Entity("T2305M_API.Entities.Artifact", b =>
                {
                    b.Navigation("ArtifactArticles");

                    b.Navigation("ArtifactImages");
                });

            modelBuilder.Entity("T2305M_API.Entities.Book", b =>
                {
                    b.Navigation("BookArticles");

                    b.Navigation("BookImages");
                });

            modelBuilder.Entity("T2305M_API.Entities.Creator", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Artifacts");

                    b.Navigation("Arts");

                    b.Navigation("Books");

                    b.Navigation("Cultures");

                    b.Navigation("Exhibitions");

                    b.Navigation("NationalEvents");
                });

            modelBuilder.Entity("T2305M_API.Entities.Culture", b =>
                {
                    b.Navigation("CultureArticles");

                    b.Navigation("CultureImages");
                });

            modelBuilder.Entity("T2305M_API.Entities.Exhibition", b =>
                {
                    b.Navigation("ExhibitionArticles");

                    b.Navigation("ExhibitionImages");
                });

            modelBuilder.Entity("T2305M_API.Entities.NationalEvent", b =>
                {
                    b.Navigation("NationalEventArticles");

                    b.Navigation("NationalEventImages");
                });
#pragma warning restore 612, 618
        }
    }
}
